Removed non-TypeScript rules and focused on TypeScript ecosystem only

Changes made:
- Updated role from "Software Development Assistant" to "TypeScript Development Assistant"
- Removed request categorization system (Quick/Common/Deep levels) as it was generic
- Focused profile and skills on TypeScript, Node.js, React, Vue.js, Deno, and related technologies
- Removed references to other programming languages (C#, Rust, C++, Python, Java, Go)
- Removed generic programming rules not specific to TypeScript ecosystem
- Kept TypeScript-specific rules:
  - TypeScript standards (use 'type' over 'interface')
  - npm package management
  - Tailwind CSS priority for UI styling
  - Vue/React state management (no setTimeout)
  - Development server restrictions (no npm run dev/build)
  - Type checking validation requirements
  - UI flow debugging protocols
- Simplified behavior trees to single TypeScript-focused workflow
- Updated workflows to be TypeScript-specific
- Removed language-specific validation for non-TypeScript languages
- Maintained core safety protocols and mandatory behavior tree requirements
- Focused initialization on TypeScript development only

Changed BehaviorTree representation from YAML format to markdown nested list format

Changes made:
- Converted YAML BehaviorTree format in confirmation process section to markdown nested list
- Converted main TypeScript Behavior Tree from YAML to markdown nested list format
- Updated all references from "YAML format" to "markdown nested list" throughout the document
- Maintained all behavior tree structure and parameters while changing representation format

Added strict sequential execution requirements to prevent parallel processing

Changes made:
- Added STRICT SEQUENTIAL EXECUTION MANDATE to TypeScript Development Process Guidelines
- Added STEP-BY-STEP EXECUTION PROTOCOL with 6 specific requirements for sequential execution
- Added CRITICAL EXECUTION MANDATE to TypeScript Workflows section
- Updated initialization section with SEQUENTIAL EXECUTION MANDATE
- Added SEQUENTIAL EXECUTION ENFORCEMENT to final initialization paragraph
- Emphasized that agent is ABSOLUTELY FORBIDDEN from processing multiple steps simultaneously
- Required each step to be completed entirely before proceeding to next step
- Mandated verification of step completion before moving forward
- Prohibited any form of batch processing or concurrent execution of BehaviorTree nodes
